{"is_source_file": true, "format": "Python (FastAPI)", "description": "This file defines HTTP API endpoints for user management functionalities in a FastAPI application, including listing, retrieving, creating, updating, and deleting users. It uses SQLAlchemy for database interactions and Pydantic models for request validation and response schemas.", "external_files": ["src.core.database", "src.core.security", "src.models", "src.schemas.user"], "external_methods": ["get_db", "get_current_user", "require_roles", "get_password_hash"], "published": ["list_users", "get_me", "get_user", "create_user", "update_user", "delete_user"], "classes": [{"name": "UserUpdate", "description": "Pydantic schema for updating user profile fields, allowing optional changes."}, {"name": "AdminUserCreate", "description": "Pydantic schema for creating users with optional roles, intended for admin or professional users."}], "methods": [{"name": "list_users(db: Session = Depends(get_db))", "description": "API endpoint to list all users, accessible to admin or professional roles.", "scope": "", "scopeKind": ""}, {"name": "get_me(current: User = Depends(get_current_user))", "description": "API endpoint to retrieve the current authenticated user's information.", "scope": "", "scopeKind": ""}, {"name": "get_user(user_id: int, db: Session = Depends(get_db))", "description": "API endpoint to retrieve user details by user ID, requiring admin or professional roles.", "scope": "", "scopeKind": ""}, {"name": "create_user(payload: AdminUserCreate, db: Session = Depends(get_db))", "description": "API endpoint to create a new user with optional roles, for admin or professional users.", "scope": "", "scopeKind": ""}, {"name": "update_user( user_id: int, payload: UserUpdate, db: Session = Depends(get_db), current: User = Depends(get_current_user), )", "description": "API endpoint to update user details; self-updates are allowed, or admins/professionals can update any user.", "scope": "", "scopeKind": ""}, {"name": "delete_user(user_id: int, db: Session = Depends(get_db))", "description": "API endpoint to delete a user by ID, requiring admin or professional roles.", "scope": "", "scopeKind": ""}], "calls": ["get_db", "get_current_user", "require_roles", "get_password_hash", "db.query", "db.get", "db.add", "db.flush", "db.commit", "db.refresh", "db.delete", "db.query(User).filter", "db.query(Role).filter"], "search-terms": ["user management", "FastAPI user routes", "CRUD user API", "SQLAlchemy user model", "security dependencies", "User schemas"], "state": 2, "file_id": 10, "knowledge_revision": 106, "git_revision": "9b863804a128c3935e8babe79d0fee05f5a1e68a", "revision_history": [{"38": "c104eb7110ab4172547901562876f5735f48c908"}, {"94": "c104eb7110ab4172547901562876f5735f48c908"}, {"106": "9b863804a128c3935e8babe79d0fee05f5a1e68a"}], "ctags": [{"_type": "tag", "name": "AdminUserCreate", "path": "/home/kavia/workspace/code-generation/fitmanage-platform-104760-104748/fitness_nutrition_backend/src/users/router.py", "pattern": "/^class AdminUserCreate(BaseModel):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "Config", "path": "/home/kavia/workspace/code-generation/fitmanage-platform-104760-104748/fitness_nutrition_backend/src/users/router.py", "pattern": "/^    class Config:$/", "language": "Python", "kind": "class", "scope": "UserUpdate", "scopeKind": "class"}, {"_type": "tag", "name": "UserUpdate", "path": "/home/kavia/workspace/code-generation/fitmanage-platform-104760-104748/fitness_nutrition_backend/src/users/router.py", "pattern": "/^class UserUpdate(BaseModel):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "create_user", "path": "/home/kavia/workspace/code-generation/fitmanage-platform-104760-104748/fitness_nutrition_backend/src/users/router.py", "pattern": "/^def create_user(payload: AdminUserCreate, db: Session = Depends(get_db)):$/", "language": "Python", "kind": "function", "signature": "(payload: AdminUserCreate, db: Session = Depends(get_db))"}, {"_type": "tag", "name": "delete_user", "path": "/home/kavia/workspace/code-generation/fitmanage-platform-104760-104748/fitness_nutrition_backend/src/users/router.py", "pattern": "/^def delete_user(user_id: int, db: Session = Depends(get_db)):$/", "language": "Python", "kind": "function", "signature": "(user_id: int, db: Session = Depends(get_db))"}, {"_type": "tag", "name": "extra", "path": "/home/kavia/workspace/code-generation/fitmanage-platform-104760-104748/fitness_nutrition_backend/src/users/router.py", "pattern": "/^        extra = \"forbid\"$/", "language": "Python", "kind": "variable", "scope": "UserUpdate.Config", "scopeKind": "class"}, {"_type": "tag", "name": "get_me", "path": "/home/kavia/workspace/code-generation/fitmanage-platform-104760-104748/fitness_nutrition_backend/src/users/router.py", "pattern": "/^def get_me(current: User = Depends(get_current_user)):$/", "language": "Python", "kind": "function", "signature": "(current: User = Depends(get_current_user))"}, {"_type": "tag", "name": "get_user", "path": "/home/kavia/workspace/code-generation/fitmanage-platform-104760-104748/fitness_nutrition_backend/src/users/router.py", "pattern": "/^def get_user(user_id: int, db: Session = Depends(get_db)):$/", "language": "Python", "kind": "function", "signature": "(user_id: int, db: Session = Depends(get_db))"}, {"_type": "tag", "name": "is_active", "path": "/home/kavia/workspace/code-generation/fitmanage-platform-104760-104748/fitness_nutrition_backend/src/users/router.py", "pattern": "/^    is_active: bool = True$/", "language": "Python", "typeref": "typename:bool", "kind": "variable", "scope": "AdminUserCreate", "scopeKind": "class"}, {"_type": "tag", "name": "is_superuser", "path": "/home/kavia/workspace/code-generation/fitmanage-platform-104760-104748/fitness_nutrition_backend/src/users/router.py", "pattern": "/^    is_superuser: bool = False$/", "language": "Python", "typeref": "typename:bool", "kind": "variable", "scope": "AdminUserCreate", "scopeKind": "class"}, {"_type": "tag", "name": "list_users", "path": "/home/kavia/workspace/code-generation/fitmanage-platform-104760-104748/fitness_nutrition_backend/src/users/router.py", "pattern": "/^def list_users(db: Session = Depends(get_db)):$/", "language": "Python", "kind": "function", "signature": "(db: Session = Depends(get_db))"}, {"_type": "tag", "name": "password", "path": "/home/kavia/workspace/code-generation/fitmanage-platform-104760-104748/fitness_nutrition_backend/src/users/router.py", "pattern": "/^    password: str = Field(min_length=6)$/", "language": "Python", "typeref": "typename:str", "kind": "variable", "scope": "AdminUserCreate", "scopeKind": "class"}, {"_type": "tag", "name": "roles", "path": "/home/kavia/workspace/code-generation/fitmanage-platform-104760-104748/fitness_nutrition_backend/src/users/router.py", "pattern": "/^    roles: list[str] = Field(default_factory=list)$/", "language": "Python", "typeref": "typename:list[str]", "kind": "variable", "scope": "AdminUserCreate", "scopeKind": "class"}, {"_type": "tag", "name": "router", "path": "/home/kavia/workspace/code-generation/fitmanage-platform-104760-104748/fitness_nutrition_backend/src/users/router.py", "pattern": "/^router = APIRouter()$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "update_user", "path": "/home/kavia/workspace/code-generation/fitmanage-platform-104760-104748/fitness_nutrition_backend/src/users/router.py", "pattern": "/^def update_user($/", "language": "Python", "kind": "function", "signature": "( user_id: int, payload: UserUpdate, db: Session = Depends(get_db), current: User = Depends(get_current_user), )"}], "hash": "00a83931a107003756848e7e2d5ad9b4", "format-version": 4, "code-base-name": "fitness_nutrition_backend", "filename": "fitness_nutrition_backend/src/users/router.py", "fields": [{"name": "extra = \"forbid\"", "scope": "UserUpdate.Config", "scopeKind": "class", "description": "unavailable"}, {"name": "bool is_active", "scope": "AdminUserCreate", "scopeKind": "class", "description": "unavailable"}, {"name": "bool is_superuser", "scope": "AdminUserCreate", "scopeKind": "class", "description": "unavailable"}, {"name": "str password", "scope": "AdminUserCreate", "scopeKind": "class", "description": "unavailable"}, {"name": "list[str] roles", "scope": "AdminUserCreate", "scopeKind": "class", "description": "unavailable"}, {"name": "router = APIRouter()", "scope": "", "scopeKind": "", "description": "unavailable"}]}