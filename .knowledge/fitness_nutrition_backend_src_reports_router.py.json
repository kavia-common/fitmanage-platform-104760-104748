{"is_source_file": true, "format": "Python", "description": "This Python source file defines API endpoints for handling report-related requests within a FastAPI application. It sets up route handlers for listing reports, retrieving summary data, activity trends, and client breakdowns, utilizing dependencies like database sessions and user authentication.", "external_files": ["src.core.database", "src.core.security", "src.models", "src.reports.service"], "external_methods": ["get_db", "get_current_user", "get_entity_counts", "get_activity_trends", "get_clients_breakdown"], "published": ["list_reports", "summary_report", "trends_report", "clients_breakdown"], "classes": [], "methods": [{"name": "dict[str,Any] list_reports( db: Session = Depends(get_db), current: User = Depends(get_current_user), )", "description": "Returns a list of available report groups for the caller.", "scope": "", "scopeKind": ""}, {"name": "dict[str,Any] summary_report( db: Session = Depends(get_db), current: User = Depends(get_current_user), )", "description": "Returns high-level counts for clients, plans, and protocols with ownership checks.", "scope": "", "scopeKind": ""}, {"name": "dict[str,Any] trends_report( days: int = Query(default=30, ge=1, le=365, description=\"Number of days to include\"), db: Session = Depends(get_db), current: User = Depends(get_current_user), )", "description": "Returns activity trends data grouped by day over the specified time period.", "scope": "", "scopeKind": ""}, {"name": "dict[str,Any] clients_breakdown( db: Session = Depends(get_db), current: User = Depends(get_current_user), )", "description": "Returns the counts of workout and diet plans per client.", "scope": "", "scopeKind": ""}], "calls": ["get_entity_counts", "get_activity_trends", "get_clients_breakdown"], "search-terms": ["FastAPI router", "reports endpoint", "activity trends", "client breakdown", "report summary", "SQLAlchemy Session", "User authentication"], "state": 2, "file_id": 15, "knowledge_revision": 147, "git_revision": "9b863804a128c3935e8babe79d0fee05f5a1e68a", "revision_history": [{"43": "c104eb7110ab4172547901562876f5735f48c908"}, {"100": "c104eb7110ab4172547901562876f5735f48c908"}, {"147": "9b863804a128c3935e8babe79d0fee05f5a1e68a"}], "ctags": [{"_type": "tag", "name": "clients_breakdown", "path": "/home/kavia/workspace/code-generation/fitmanage-platform-104760-104748/fitness_nutrition_backend/src/reports/router.py", "pattern": "/^def clients_breakdown($/", "language": "Python", "typeref": "typename:dict[str,Any]", "kind": "function", "signature": "( db: Session = Depends(get_db), current: User = Depends(get_current_user), )"}, {"_type": "tag", "name": "list_reports", "path": "/home/kavia/workspace/code-generation/fitmanage-platform-104760-104748/fitness_nutrition_backend/src/reports/router.py", "pattern": "/^def list_reports($/", "language": "Python", "typeref": "typename:dict[str,Any]", "kind": "function", "signature": "( db: Session = Depends(get_db), current: User = Depends(get_current_user), )"}, {"_type": "tag", "name": "router", "path": "/home/kavia/workspace/code-generation/fitmanage-platform-104760-104748/fitness_nutrition_backend/src/reports/router.py", "pattern": "/^router = APIRouter()$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "summary_report", "path": "/home/kavia/workspace/code-generation/fitmanage-platform-104760-104748/fitness_nutrition_backend/src/reports/router.py", "pattern": "/^def summary_report($/", "language": "Python", "typeref": "typename:dict[str,Any]", "kind": "function", "signature": "( db: Session = Depends(get_db), current: User = Depends(get_current_user), )"}, {"_type": "tag", "name": "trends_report", "path": "/home/kavia/workspace/code-generation/fitmanage-platform-104760-104748/fitness_nutrition_backend/src/reports/router.py", "pattern": "/^def trends_report($/", "language": "Python", "typeref": "typename:dict[str,Any]", "kind": "function", "signature": "( days: int = Query(default=30, ge=1, le=365, description=\"Number of days to include\"), db: Session = Depends(get_db), current: User = Depends(get_current_user), )"}], "hash": "e289f162c816a46bf054714789881fa5", "format-version": 4, "code-base-name": "fitness_nutrition_backend", "filename": "fitness_nutrition_backend/src/reports/router.py", "fields": [{"name": "router = APIRouter()", "scope": "", "scopeKind": "", "description": "unavailable"}]}