{"is_source_file": true, "format": "Python", "description": "This file provides utility functions for API endpoints in a FastAPI project, including pagination handling, query application, and access control for client resources based on user roles.", "external_files": ["fastapi", "sqlalchemy.orm", "src.models"], "external_methods": ["fastapi.Query", "fastapi.HTTPException", "sqlalchemy.orm.Query.offset", "sqlalchemy.orm.Query.limit", "sqlalchemy.orm.Session.get"], "published": ["pagination_params", "paginate", "assert_client_ownership_or_admin"], "classes": [], "methods": [{"name": "Tuple[int,int] pagination_params( page: int = Query(1, ge=1, description=\"Page number (1-based).\"), page_size: int = Query(20, ge=1, le=100, description=\"Items per page (max 100).\"), )", "description": "Returns offset and limit based on page and page_size query parameters, with validation.", "scope": "", "scopeKind": ""}, {"name": "SAQuery _apply_pagination(q: SAQuery, offset: int, limit: int)", "description": "Applies offset and limit to a SQLAlchemy query.", "scope": "", "scopeKind": ""}, {"name": "list[Any] paginate(q: SAQuery, offset: int, limit: int)", "description": "Executes a paginated query and returns all results as a list.", "scope": "", "scopeKind": ""}, {"name": "Client assert_client_ownership_or_admin( db: Session, client_id: int, current: User, error_message: Optional[str] = None )", "description": "Checks if the current user has access to the specified client; raises HTTPException if not authorized.", "scope": "", "scopeKind": ""}], "calls": ["db.get", "raise HTTPException", "current.roles", "client.user_id"], "search-terms": ["pagination_params", "assert_client_ownership", "FastAPI utils", "SQLAlchemy pagination", "client access control"], "state": 2, "file_id": 45, "knowledge_revision": 110, "git_revision": "", "ctags": [{"_type": "tag", "name": "SAQuery", "path": "/home/kavia/workspace/code-generation/fitmanage-platform-104760-104748/fitness_nutrition_backend/src/api/utils.py", "pattern": "/^from sqlalchemy.orm import Query as SAQuery$/", "language": "Python", "kind": "unknown", "nameref": "unknown:Query"}, {"_type": "tag", "name": "_apply_pagination", "path": "/home/kavia/workspace/code-generation/fitmanage-platform-104760-104748/fitness_nutrition_backend/src/api/utils.py", "pattern": "/^def _apply_pagination(q: SAQuery, offset: int, limit: int) -> SAQuery:$/", "language": "Python", "typeref": "typename:SAQuery", "kind": "function", "signature": "(q: SAQuery, offset: int, limit: int)"}, {"_type": "tag", "name": "assert_client_ownership_or_admin", "path": "/home/kavia/workspace/code-generation/fitmanage-platform-104760-104748/fitness_nutrition_backend/src/api/utils.py", "pattern": "/^def assert_client_ownership_or_admin($/", "language": "Python", "typeref": "typename:Client", "kind": "function", "signature": "( db: Session, client_id: int, current: User, error_message: Optional[str] = None )"}, {"_type": "tag", "name": "paginate", "path": "/home/kavia/workspace/code-generation/fitmanage-platform-104760-104748/fitness_nutrition_backend/src/api/utils.py", "pattern": "/^def paginate(q: SAQuery, offset: int, limit: int) -> list[Any]:$/", "language": "Python", "typeref": "typename:list[Any]", "kind": "function", "signature": "(q: SAQuery, offset: int, limit: int)"}, {"_type": "tag", "name": "pagination_params", "path": "/home/kavia/workspace/code-generation/fitmanage-platform-104760-104748/fitness_nutrition_backend/src/api/utils.py", "pattern": "/^def pagination_params($/", "language": "Python", "typeref": "typename:Tuple[int,int]", "kind": "function", "signature": "( page: int = Query(1, ge=1, description=\"Page number (1-based).\"), page_size: int = Query(20, ge=1, le=100, description=\"Items per page (max 100).\"), )"}], "hash": "5bfecc3e6ee2faf3dd92d1f03d2384c7", "format-version": 4, "code-base-name": "fitness_nutrition_backend", "filename": "fitness_nutrition_backend/src/api/utils.py", "revision_history": [{"110": ""}]}